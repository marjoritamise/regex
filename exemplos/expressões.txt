Básicas: https://tableless.com.br/o-basico-sobre-expressoes-regulares/

Expressões:
\d = digito de [0-9]
\s ou \s+ = 1 ou mais spaces (é um atalho para [\t\r\n\f])
\. = ponto literal
\w = [A-Za-z_0-9] mas sem acentos ou caracteres especiais (word char)
\b = (word boundary)
^ = início da expressão
$ = fim da expressão

Classes de letras:
[A-Z] significa de A até Z, sempre maiúscula.
[a-z] significa de a até z, sempre minúscula,
[A-Za-z] significa A-Z ou a-z.
[abc] significa a, b ou c.
[123] significa 1, 2 ou 3.

Regex Quantifiers:
? - zero ou uma vez.
* - zero ou mais vezes.
+ - uma ou mais vezes.
{n} - exatamente n vezes.
{n,} - no mínimo n vezes.
{n,m} - no mínimo n vezes, no máximo m vezes.

(Word boundary)
O que queremos na verdade é encontrar o início e o fim de uma palavra, que podemos definir pela regex \b. \b é uma das âncoras, chamada de word boundary. Uma âncora não seleciona um caractere, ela seleciona apenas uma posição no texto alvo. Ou seja, a âncora \b sozinha devolve nada (zero-length) mas combinada com um valor literal, ou outra regex, podemos finalmente definir como encontrar a preposição.

___________________________________________________________________


Atividade:
João Fulano,123.456.789-00,21 de Maio de 1993,(21) 3079-9987,Rua do Ouvidor,50,20040-030,Rio de Janeiro
Maria Fulana, 98765432100,11 de Abril de 1995,(11) 933339871,Rua Vergueiro,3185,04101-300,São Paulo
denise teste, 987.654.321.00,28 de Dezembro de 1991,(31)45562712,SCS Qd. 8 Bl. B-50,11,70333-900,Rio Grande

Resposta:
Encontrar o CPF: (\d{3}\.){2}\d{3}-\d{2}
Encontrar o CNPJ: \d{2}\.\d{3}\.\d{3}/\d{4}-\d{2}
Encontrar o CEP: \d{5}-\d{3}
Telefone: \([1-9]{2}\)\.\d{4,5}\-\d{4}
Cpf com ou sem formatação: \d{3}\.?\d{3}\.?\d{3}(-|\.)?\d{2}
Data comum: [0-3]?\d\s+de\s+[A-Z][a-zç]{3,8}\s+de\s+[12]\d{3}
Data data com abreviação: [1-3]?\d\s+de\s+[A-Z][a-zç]{3,8}\s+de\s+\d{1,4}

Atividade:
No <code>for</code>, o valor de <code>i</code> começa de zero e é incrementado a cada volta enquanto <code>i < 10</code>, portando o bloco de código do for é executado 10 vezes.

Resposta:
</?code>

Atividade:
KMG-8089 (placa de carro)

Resposta:
Placa de carro: [\w\W]{3}-\d{4}

Atividade:
9.8 - Robson, 7.1 - Teresa, 4.5 - Armênio, 6.5 - Zulu, 7.7 - Stefania, 7.8 - João, 5.0 - Romeu, 7.2 - Pompilho, 3.1 - Reinaldo, 7.3 - Bernadete, 4.7 - Cinério
10 - Bruce, 9.5 - Miranda, 7.9    - Bob, 10 - Zimbabue, 7.5 - Bety

Resposta:
[7-9]\.[5-9]\s+-\s+\w+

Atividade:
BALEIRO GARROTE SERROTE GOLEIRO ROTEIRO

Resposta:
[A-Z]*ROT[A-Z]+

Atividade:
?classes+poderosas*

Resposta:
[a-z?*+]+

Atividade:
O username precisa ser da seguinte forma:

O limite é de 10 caracteres;
O primeiro caractere deve ser uma letra do alfabeto, não pode ser um número;
A partir do segundo caractere podemos ter letras maiúsculas, minúsculas e números;
Como deve ficar a anotação @Pattern com uma expressão regular com essas características?

Resposta:
[a-zA-Z][a-zA-Z0-9]{0,9}

Atividade:
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Respostas:
^Caused by:.*
^Caused by:\s+\w.